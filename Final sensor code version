#include <DHT.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

#define DHTPIN 4
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE);
WiFiClient espClient;
PubSubClient client(espClient);
SoftwareSerial ss(4, 5);

const char* ssid = "";
const char* password = "";
const char* mqtt_server = "test.mosquitto.org";
//*********************************************//
char msg_humidity[50];
char msg_temperature[50];
char msg_light[50];
char msg_location_lat[50];//added line
char msg_location_lng[50];//added line
char msg_date_yea[50];//added line
char msg_date_day[50];//added line
char msg_date_mon[50];//added line
char msg_time_hou[50];//added line
char msg_time_min[50];//added line
char msg_time_sec[50];//added line
char msg_time_ces[50];//added line
//*********************************************//
float h;
float t;
float loc_lat;//added line
float loc_lng;//added line
float date_yea;//added line
float date_mon;//added line
float date_day;//added line
float time_hou;//added line
float time_min;//added line
float time_sec;//added line
float time_ces;//added line
//*********************************************//
static const uint32_t GPSBaud = 9600;

void setup_wifi(){
  delay(10);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED){
    delay(500);
    Serial.print(".");
  }
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect(){
  while (!client.connected()){
    if (!client.connect("SW")){
      Serial.print("Failed, rc=");
      Serial.print(client.state());
      delay(5000);
    }
  }
}

void displayInfo()
{
  Serial.print(F("Location: ")); 
  if (gps.location.isValid())
  {
    Serial.print(gps.location.lat(), 6);
    Serial.print(F(","));
    Serial.print(gps.location.lng(), 6);
	loc_lat = gps.location.lat(); // added line
	loc_lng = gps.location.lng(); // added line
	
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.print(F("  Date/Time: "));
  if (gps.date.isValid())
  {
    Serial.print(gps.date.month());
    Serial.print(F("/"));
    Serial.print(gps.date.day());
    Serial.print(F("/"));
    Serial.print(gps.date.year());
	date_yea = gps.date.year(); //added line
	date_mon = gps.date.month(); //added line
	date_day = gps.date.day(); //added line
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.print(F(" "));
  if (gps.time.isValid())
  {
    if (gps.time.hour() < 10) Serial.print(F("0"));
    Serial.print(gps.time.hour());
    Serial.print(F(":"));
    if (gps.time.minute() < 10) Serial.print(F("0"));
    Serial.print(gps.time.minute());
    Serial.print(F(":"));
    if (gps.time.second() < 10) Serial.print(F("0"));
    Serial.print(gps.time.second());
    Serial.print(F("."));
    if (gps.time.centisecond() < 10) Serial.print(F("0"));
    Serial.print(gps.time.centisecond());
	time_hou = gps.time.hour(); //added line
	time_min = gps.time.minute(); //added line
	time_sec = gps.time.second(); //added line
	time_ces = gps.time.centisecond();//added line
  }
  else
  {
    Serial.print(F("INVALID"));
  }

  Serial.println();
}

void wakeUp(){
  Serial.println("Waking up");
  delay(3000);
  Serial.println("Morning!");
  digitalWrite(LED_BUILTIN, HIGH);
}

void setup(){
  Serial.begin(9600);
  dht.begin();
  ss.begin(GPSBaud);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  pinMode(A0, INPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, LOW);
  while (!Serial){}
  Serial.println("Device booted up");
  Serial.println("================");
}

int timeSinceLastRead = 0;

void loop(){
  if (!client.connected()){
    reconnect();
  }
  digitalWrite(LED_BUILTIN, HIGH);
  h = dht.readHumidity();
  t = dht.readTemperature();
  if (isnan(h) || isnan(t)){
    Serial.println("Failed to read from DHT sensor");
    timeSinceLastRead = 0;
    return;
  }
  float hic = dht.computeHeatIndex(t, h, false);
  int sensorValue = analogRead(A0);
  float voltage = sensorValue * (5.0/1023.0);

  Serial.print("Humidity: ");
  Serial.print(h);
  Serial.print(" %\t");
  Serial.print("Temperature: ");
  Serial.print(t);
  Serial.print(" *C ");
  Serial.print("Heat index: ");
  Serial.print(hic);
  Serial.println(" *C ");
  Serial.print("From the light sensor: ");
  Serial.println(voltage);

  timeSinceLastRead=0;
  client.loop();
  delay(5000);
  //**************************************************************//
  snprintf(msg_temperature, 50, "%f", t);
  snprintf(msg_humidity, 50, "%f", h);
  snprintf(msg_light, 50, "%f", voltage);
  snprintf(msg_location_lat, 50, "%f", loc_lat);//added line
  snprintf(msg_location_lng, 50, "%f", loc_lng);//added line
  snprintf(msg_date_yea, 50, "%f", date_yea);//added line
  snprintf(msg_date_mon, 50, "%f", date_mon);//added line
  snprintf(msg_date_day, 50, "%f", date_day);//added line
  snprintf(msg_time_hou, 50, "%f", time_hou);//added line
  snprintf(msg_time_min, 50, "%f", time_min);//added line
  snprintf(msg_time_sec, 50, "%f", time_sec);//added line
  snprintf(msg_time_ces, 50, "%f", time_ces);//added line
  //***************************************************************//
  client.publish("SW/temp", msg_temperature);
  client.publish("SW/humi", msg_humidity);
  client.publish("SW/ligh", msg_light);
  client.publish("SW/location/lat", msg_location_lat); //added line
  client.publish("SW/location/lng", msg_location_lng); //added line
  client.publish("SW/date/year", msg_date_yea); //added line
  client.publish("SW/date/month", msg_date_mon);//added line
  client.publish("SW/date/day", msg_date_day);//added line
  client.publish("SW/time/hour", msg_time_hou);//added line
  client.publish("SW/time/minute", msg_time_min);//added line
  client.publish("SW/time/second", msg_time_sec);//added line
  client.publish("SW/time/centisecond", msg_time_ces);//added line
  
  while (ss.available() > 0)
    if (gps.encode(ss.read()))
      displayInfo();

  if (millis() > 5000 && gps.charsProcessed() < 10)
  {
    Serial.println(F("No GPS detected: check wiring."));
    while(true);
  }
  
  if (voltage <= 1.5){
    Serial.println("Going to sleep");
    delay(1000);
    ESP.deepSleep(50e5);
    wakeUp();
  }
}
